<robot name="vehicle">

<!--                    DEFINING MATERIALS   -->
  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
<!--Defining the robot-->
<!--                      BASE LINK            -->
    <link name="base_link">
         <inertial>
     <origin xyz="0 0 0.08" rpy="0 0 0"/>
     <mass value="1"/>
     <inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" />
   </inertial>

   <visual>
     <origin xyz="0 0 0.08" rpy="0 0 0" />
     <geometry>
       <box size="0.3 0.5 0.1" />
     </geometry>
     <material name="blue">
     </material>
   </visual>

   <collision>
     <origin xyz="0 0 0.08" rpy="0 0 0"/>
     <geometry>
       <box  size="0.11 0.5 0.1" />
     </geometry>
   </collision>
    </link>

    
<!--                    RIGHT FRONT WHEEL                       -->
    <link name="right_front_wheel">
         <inertial>
     
     <mass value="1"/>
     <inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" />
   </inertial>

   <visual>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
     <material name="white">
     </material>
   </visual>

   <collision>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
   </collision>
    </link>

<!--                    LEFT FRONT WHEEL                       -->
    <link name="left_front_wheel">
         <inertial>
     <mass value="1"/>
     <inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" />
   </inertial>

   <visual>
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
     <material name="white">
     </material>
   </visual>

   <collision>
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
   </collision>
    </link>
    

<!--                    RIGHT BACK WHEEL                       -->
    <link name="right_back_wheel">
         <inertial>
     
     <mass value="1"/>
     <inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" />
   </inertial>

   <visual>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
     <material name="white">
     </material>
   </visual>

   <collision>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
   </collision>
    </link>



    <!--                    LEFT BACK WHEEL                       -->
    <link name="left_back_wheel">
         <inertial>
     
     <mass value="1"/>
     <inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" />
   </inertial>

   <visual>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
     <material name="white">
     </material>
   </visual>

   <collision>
     
     <geometry>
       <cylinder  radius ="0.07" length="0.03"/>
     </geometry>
   </collision>
    </link>

           <!--                    CAMERA LINK                     -->
    <link name="camera_link">
         <inertial>
     
     <mass value="0.4"/>
     <inertia ixx="1"  ixy="0"  ixz="0" iyy="1" iyz="0" izz="1" />
   </inertial>

   <visual>
     
     <geometry>
       <box   size= "0.05 0.05 0.05"/>
     </geometry>
     <material name="green">
     </material>
   </visual>

   <collision>
     
     <geometry>
       <box   size= "0.1 0.1 0.1"/>
     </geometry>
   </collision>
    </link>
    <!--                              JOINTS             -->
    <!--           JOINT BASE TO RIGHT FRONT WHEEL       -->

    <joint name="joint_base_to_right_front_wheel" type="continuous">
    <origin xyz="0.165 0.24 0.015" rpy="1.57 1.57 1.57"/>
    <parent link="base_link"/>
    <child link="right_front_wheel"/>
    </joint>
  <!--           JOINT BASE TO LEFT FRONT WHEEL  -->

    <joint name="joint_base_to_left_front_wheel" type="continuous">
    <origin xyz="-0.165 0.24 0.015" rpy="1.57 1.57 1.57"/>
    <parent link="base_link"/>
    <child link="left_front_wheel"/>
    </joint>

    <!--           JOINT BASE TO RIGHT BACK WHEEL  -->
    <joint name="joint_base_to_right_back_wheel" type="continuous">
    <origin xyz="-0.165 -0.24 0.015" rpy="1.57 1.57 1.57"/>
    <parent link="base_link"/>
    <child link="right_back_wheel"/>
    </joint>

  <!--           JOINT BASE TO LEFT BACK WHEEL    -->
    <joint name="joint_base_to_left_back_wheel" type="continuous">
    <origin xyz="0.165 -0.24 0.015" rpy="1.57 1.57 1.57"/>
    <parent link="base_link"/>
    <child link="left_back_wheel"/>
    </joint>

     <!--           JOINT BASE TO CAMERA    -->
    <joint name="joint_base_to_camera_link" type="fixed">
    <origin xyz="0.05 0.21 0.155"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
    </joint>

      <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>vehiclediffdrive/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
<!--                       ROS CONTROL      -->
<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/vehicle</robotNamespace>
  </plugin>
</gazebo>
<!--                    MOTORS AND ACTUATORS            -->
  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base_to_left_back_wheel">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base_to_right_back_wheel">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
   <transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base_to_left_front_wheel">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_base_to_right_front_wheel">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>



</robot>
